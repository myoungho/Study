/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as _notFoundRouteImport } from './routes/__not-found'
import { Route as IndexRouteImport } from './routes/index'
import { Route as TodosIndexRouteImport } from './routes/todos/index'
import { Route as TodosTodoIdRouteImport } from './routes/todos/$todoId'
import { Route as AuthSignInRouteImport } from './routes/auth.sign-in'

const _notFoundRoute = _notFoundRouteImport.update({
  id: '/__not-found',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const TodosIndexRoute = TodosIndexRouteImport.update({
  id: '/todos/',
  path: '/todos/',
  getParentRoute: () => rootRouteImport,
} as any)
const TodosTodoIdRoute = TodosTodoIdRouteImport.update({
  id: '/todos/$todoId',
  path: '/todos/$todoId',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignInRoute = AuthSignInRouteImport.update({
  id: '/auth/sign-in',
  path: '/auth/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/todos/$todoId': typeof TodosTodoIdRoute
  '/todos': typeof TodosIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/todos/$todoId': typeof TodosTodoIdRoute
  '/todos': typeof TodosIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/__not-found': typeof _notFoundRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/todos/$todoId': typeof TodosTodoIdRoute
  '/todos/': typeof TodosIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/auth/sign-in' | '/todos/$todoId' | '/todos'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/auth/sign-in' | '/todos/$todoId' | '/todos'
  id:
    | '__root__'
    | '/'
    | '/__not-found'
    | '/auth/sign-in'
    | '/todos/$todoId'
    | '/todos/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  _notFoundRoute: typeof _notFoundRoute
  AuthSignInRoute: typeof AuthSignInRoute
  TodosTodoIdRoute: typeof TodosTodoIdRoute
  TodosIndexRoute: typeof TodosIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/__not-found': {
      id: '/__not-found'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof _notFoundRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/todos/': {
      id: '/todos/'
      path: '/todos'
      fullPath: '/todos'
      preLoaderRoute: typeof TodosIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/todos/$todoId': {
      id: '/todos/$todoId'
      path: '/todos/$todoId'
      fullPath: '/todos/$todoId'
      preLoaderRoute: typeof TodosTodoIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/sign-in': {
      id: '/auth/sign-in'
      path: '/auth/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof AuthSignInRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  _notFoundRoute: _notFoundRoute,
  AuthSignInRoute: AuthSignInRoute,
  TodosTodoIdRoute: TodosTodoIdRoute,
  TodosIndexRoute: TodosIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
